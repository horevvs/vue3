{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"hello\"\n};\nconst _hoisted_2 = [\"placeholder\"];\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = [\"on:click\"];\nconst _hoisted_6 = [\"on:click\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($props.msg), 1 /* TEXT */), _createElementVNode(\"div\", {\n    class: _normalizeClass(['dodo', {\n      bobo: $data.ara.length >= 4\n    }])\n  }, \"Counter\", 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass($data.ara.length > 5 ? 'one' : 'two')\n  }, _toDisplayString($data.count), 3 /* TEXT, CLASS */), _createElementVNode(\"div\", null, _toDisplayString($data.name), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.inrease && $options.inrease(...args))\n  }, \" + \"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.decrease && $options.decrease(...args))\n  }, \" - \"), _createCommentVNode(\" <input type=\\\"text\\\" :placeholder=\\\"result\\\" :value=\\\"inputvalue\\\" @input=\\\"changeinput\\\">\\r\\n    <p>{{ inputvalue }}</p> \"), _createCommentVNode(\" директива  сразу записывает все в переменнут  inputvalue: '' \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: $data.result,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.inputvalue = $event),\n    onKeypress: _cache[3] || (_cache[3] = _withKeys((...args) => $options.addNewnote && $options.addNewnote(...args), [\"enter\"]))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_2), [[_vModelText, $data.inputvalue]]), _createElementVNode(\"p\", {\n    class: _normalizeClass({\n      one: true,\n      three: $data.ara.length >= 2\n    })\n  }, _toDisplayString($data.inputvalue), 3 /* TEXT, CLASS */), _createElementVNode(\"p\", null, _toDisplayString($data.inputvalue), 1 /* TEXT */), _createCommentVNode(\" // тут рендерим чере v-for как в реакте только в v-for пришем итем и его id, прописываем потмо по нему фильруем \"), _createElementVNode(\"button\", {\n    \"on:click\": _cache[4] || (_cache[4] = (...args) => $options.removeNote && $options.removeNote(...args)),\n    class: \"btn\"\n  }, \"return\", 32 /* NEED_HYDRATION */), $data.ara.length == 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createTextVNode(\" нету заметок \"), _createElementVNode(\"div\", null, _toDisplayString($options.calculateNotes), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.ara, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_createElementVNode(\"div\", {\n      class: _normalizeClass({\n        one: true,\n        three: $data.ara.length > 2\n      }),\n      \"on:click\": $event => $options.getid(index)\n    }, _toDisplayString(item), 43 /* TEXT, CLASS, PROPS, NEED_HYDRATION */, _hoisted_5), _createElementVNode(\"button\", {\n      \"on:click\": $event => $options.geleteNote(index),\n      class: \"btn\"\n    }, \"удалить\", 40 /* PROPS, NEED_HYDRATION */, _hoisted_6)]);\n  }), 128 /* KEYED_FRAGMENT */))]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$props","msg","_normalizeClass","bobo","$data","ara","length","count","name","onClick","_cache","args","$options","inrease","decrease","_createCommentVNode","type","placeholder","result","$event","inputvalue","onKeypress","_withKeys","addNewnote","_hoisted_2","one","three","removeNote","_hoisted_3","_createTextVNode","calculateNotes","_hoisted_4","_Fragment","_renderList","item","index","getid","_hoisted_5","geleteNote","_hoisted_6"],"sources":["C:\\Users\\DNS\\Desktop\\kama\\newdrill\\vue3\\src\\components\\My_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"hello\">\r\n    <h1>{{ msg }}</h1>\r\n    <div :class=\"['dodo', { bobo: ara.length >= 4 }]\">Counter</div>\r\n    <div :class=\"ara.length > 5 ? 'one' : 'two'\">{{ count }} </div>\r\n    <div>{{ name }} </div>\r\n    <button @click=\"inrease\"> + </button>\r\n    <button @click=\"decrease\"> - </button>\r\n\r\n    <!-- <input type=\"text\" :placeholder=\"result\" :value=\"inputvalue\" @input=\"changeinput\">\r\n    <p>{{ inputvalue }}</p> -->\r\n    <!-- директива  сразу записывает все в переменнут  inputvalue: '' -->\r\n    <input type=\"text\" :placeholder=\"result\" v-model=\"inputvalue\" v-on:keypress.enter=\"addNewnote\">\r\n\r\n    <p :class=\"{ one: true, three: ara.length >= 2 }\">{{ inputvalue }}</p>\r\n    <p>{{ inputvalue }}</p>\r\n    <!-- // тут рендерим чере v-for как в реакте только в v-for пришем итем и его id, прописываем потмо по нему фильруем -->\r\n    <button @:click=\"removeNote\" class=\"btn\">return</button>\r\n    <div v-if=\"ara.length == 0\">\r\n      нету заметок\r\n      <div>{{ calculateNotes }}</div>\r\n    </div>\r\n\r\n    <div v-else>\r\n      <div v-for=\"(  item, index  ) in   ara  \" v-bind:key=\"index\">\r\n        <div :class=\"{ one: true, three: ara.length > 2 }\" @:click=\"getid(index)\">{{ item }}</div>\r\n        <button @:click=\"geleteNote(index)\" class=\"btn\">удалить</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'HelloWorld',\r\n  props: {\r\n    msg: String\r\n  },\r\n  data() {\r\n    return {\r\n      count: 0,\r\n      name: 'Vova',\r\n      result: 'епта текст',\r\n      inputvalue: '',\r\n      ara2: ['11', '22', '33', '44', '55'],\r\n      ara: []\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    addNewnote() {\r\n      // читаем значение с инпута когда срабатывает функция\r\n      this.ara.push(event.target.value)\r\n      this.inputvalue = '2пусто'\r\n    },\r\n\r\n\r\n    inrease() {\r\n      this.count++\r\n    },\r\n    decrease() {\r\n      this.count--\r\n    },\r\n    changeinput() {\r\n      this.inputvalue = event.target.value\r\n    },\r\n\r\n    getid(index) {\r\n      console.log(index)\r\n    },\r\n\r\n    geleteNote(index) {\r\n      this.ara.splice(index, 1)\r\n    },\r\n\r\n    removeNote() {\r\n      console.log(this.ara)\r\n\r\n      this.ara = ['11', '22', '33', '44', '55']\r\n    },\r\n  },\r\n\r\n  // только по условию, например когда идет изменение dom\r\n  computed: {\r\n    calculateNotes() {\r\n      return console.log('сработал computed', this.ara)\r\n    }\r\n  },\r\n\r\n  // срабатывает в случае выполнения события, реагирует на переменну в дата\r\n  watch: {\r\n    inputvalue(value) {\r\n      console.log('watch', value)\r\n      if (value.length >= 5) {\r\n        // this.name = 'vitya'\r\n        this.name = 'витя'\r\n        console.log('сработало')\r\n      }\r\n    }\r\n  },\r\n\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n.one {\r\n  background-color: brown;\r\n}\r\n\r\n\r\n.two {\r\n  background-color: rgb(87, 165, 74);\r\n}\r\n\r\n\r\n.three {\r\n  background-color: rgb(42, 61, 165);\r\n}\r\n\r\n\r\n.bobo {\r\n  font-size: 45px;\r\n\r\n}\r\n\r\n.dodo {\r\n  background-color: rgb(163, 165, 42);\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}